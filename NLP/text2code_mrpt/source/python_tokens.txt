;
break
continue
pass
:
=
~
!
+=
-=
*=
@=
/=
%=
&=
|=
^=
<<=
>>=
**=
//=
return
raise
from
global
nonlocal
del
assert
import
as
[
]
(
)
+
,
.
@
class
def
/
**
*
&
if
elif
else
while
for
in
with
try
except
finally
match
case
if
+
|
-
None
True
False
{
}
?
yield
from
or
and
not
<
>
<=
>=
is
in
^
<<
>>
//
tuple
list
dict
set
lambda
str
bool
int
float
real
complex
range
frozenset
NoneType
bytes
bytearray
memoryview
type
print
isinstance
->
get
self
enumerate
keys
values
append
extend
len
index
format
assertEqual
update
join
open
read
readlines
split
items
find
rfind
close
super
sum
all
any
min
max
remove
replace
pop
add
strip
rstrip
lower
upper
count
sort
reverse
clear
endswith
startswith
capitalize
casefold
center
count
encode
endswith
expandtabs
find
format
format_map
index
isalnum
isalpha
isascii
isdecimal
isdigit
isidentifier
islower
isnumeric
isprintable
isspace
istitle
isupper
join
ljust
lower
lstrip
maketrans
partition
replace
rfind
rindex
rjust
rpartition
rsplit
rstrip
split
splitlines
startswith
strip
swapcase
title
translate
upper
zfill
clear
copy
fromkeys
get
items
keys
pop
popitem
setdefault
update
values